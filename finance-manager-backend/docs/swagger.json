{
    "swagger": "2.0",
    "info": {
        "description": "This API serves personal finance endpoints. Accuracy is not garunteed",
        "title": "Go Finance Manager API",
        "contact": {},
        "version": "1.0.0"
    },
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "Returns application information and health",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home"
                ],
                "summary": "Home",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HomeResponse"
                        }
                    }
                }
            }
        },
        "/authenticate": {
            "post": {
                "description": "Attempts to use passed credentials to authenticate with the application and generate JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authentication.TokenPairs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Returns an expired refresh cookie which prevents the user from re-authenticating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/modules/{moduleName}": {
            "get": {
                "description": "Returns a boolean stating whether the requested module is enabled or not",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Modules"
                ],
                "summary": "Module Enabled",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the module to check. Options are {stocks}",
                        "name": "moduleName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ModuleEnabledResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/modules/{moduleName}/key": {
            "post": {
                "description": "Adds or overwrites the API key for the given module if allowed for this module",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Modules"
                ],
                "summary": "Add Module API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The name of the module to add a key for. Options are {stocks}",
                        "name": "moduleName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The request containing the Key to add",
                        "name": "keyRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EnableModuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "get": {
                "description": "Attempts to refresh Tokens using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authentication.TokenPairs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Attempts to register a new user into the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "The User to Register",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "Returns an array of Role objects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get All Roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search for roles by name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Role"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/stocks": {
            "get": {
                "description": "Gets History data for one or more stocks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Get Stock History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "A comma separated list of stocks to fetch positions for",
                        "name": "tickers",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The amount of days back we should load history for. Max is 365. Default is 30",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PositionHistory"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Returns an array of User objects",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get All Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search for Users by first or last name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "description": "Returns a User by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user to fetch",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a User by its ID. Cascades to all objects owned by the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user to fetch",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/bills": {
            "get": {
                "description": "Returns an array of Bill objects belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bills"
                ],
                "summary": "Get All User Bills",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search for bills by name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Bill"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts a new Bill into the Database for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bills"
                ],
                "summary": "Insert Bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The bill to insert",
                        "name": "bill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/bills/{billId}": {
            "get": {
                "description": "Returns a Bill by its ID for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bills"
                ],
                "summary": "Get Bill by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Bill ID",
                        "name": "billId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Bill"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing Bill for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bills"
                ],
                "summary": "Update Bill",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the bill to update",
                        "name": "billId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The bill to update",
                        "name": "bill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user's Bill by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bills"
                ],
                "summary": "Delete Bill by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the bill",
                        "name": "billId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/credit-cards": {
            "get": {
                "description": "Returns an array of CreditCard objects belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credit Cards"
                ],
                "summary": "Get All User Credit Cards",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search for Credit Cards by name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CreditCard"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts a new Credit Card object for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credit Cards"
                ],
                "summary": "Insert Credit Card",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Credit card to insert",
                        "name": "creditCard",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreditCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/credit-cards/{ccId}": {
            "get": {
                "description": "Fetches a Credit Card by its ID for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credit Cards"
                ],
                "summary": "Get Credit Card by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Credit Card",
                        "name": "ccId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreditCard"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a Credit Card by its ID for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credit Cards"
                ],
                "summary": "Update Credit Card by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Credit Card",
                        "name": "ccId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a Credit Card by its ID for a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credit Cards"
                ],
                "summary": "Delete Credit Card by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Credit Card",
                        "name": "ccId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/incomes": {
            "get": {
                "description": "Returns an array of Income objects belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incomes"
                ],
                "summary": "Get All User Incomes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search for incomes by name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Income"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts a new Income into the Database for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incomes"
                ],
                "summary": "Insert Income",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The income to insert",
                        "name": "income",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Income"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/incomes/{incomeId}": {
            "get": {
                "description": "Returns an Income object belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incomes"
                ],
                "summary": "Get Income by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "the ID of the Income",
                        "name": "incomeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Income"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing Income for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incomes"
                ],
                "summary": "Update Income",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the income to update",
                        "name": "incomeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The income to update",
                        "name": "income",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Income"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user's Income by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Incomes"
                ],
                "summary": "Delete Income by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Income",
                        "name": "incomeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/loans": {
            "get": {
                "description": "Returns an array of Loan objects belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Get All User Loans",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search for loans by name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Loan"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts a new Loan into the Database for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Insert Loan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The loan to insert",
                        "name": "loan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Loan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/loans-summary": {
            "get": {
                "description": "Gets a summary of all loans for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Get User Loan Summary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoansSummary"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/loans/{loanId}": {
            "get": {
                "description": "Returns a Loan object belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Get Loan by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "the ID of the Loan",
                        "name": "loanId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Loan"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing Loan for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Update Loan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the loan to update",
                        "name": "loanId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The loan to update",
                        "name": "loan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Loan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a Loan object belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Delete Loan by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "the ID of the Loan",
                        "name": "loanId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Loan"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/loans/{loanId}/calculate": {
            "post": {
                "description": "Performs calculations on a loan and returns the loan with updated values.\nDoes not Persist values",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Calculate Loan Values",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Loan ID. Will also accept 'new' for unsaved loan",
                        "name": "loanId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The Loan to Calculate values for",
                        "name": "loan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Loan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Loan"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/loans/{loanId}/compare-payments": {
            "post": {
                "description": "Performs calculations on a loan and a Persisted loan with an Id, then returns a list comparing the two\nDoes not Persist values",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Loans"
                ],
                "summary": "Compare Loan Payments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The ID of the persisted loan to compare against",
                        "name": "loanId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new Loan to calculate and compare",
                        "name": "loan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Loan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentScheduleComparisonItem"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/roles": {
            "get": {
                "description": "Returns an array of UserRole objects belonging to a given user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Roles"
                ],
                "summary": "Get All User Roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user we are searching for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search for user role by role name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserRole"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/roles/{roleId}": {
            "post": {
                "description": "Adds a new role to a User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Roles"
                ],
                "summary": "Add User Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user to add a role to",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the role to add to the user",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes a role from a a User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Roles"
                ],
                "summary": "Remove User Role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user to remove a role from",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the role to remove from the user",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/stock-portfolio-history": {
            "get": {
                "description": "Gets History of a User's Stock Portfolio Balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Get User Stock Portfolio History",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The ID of the user to get Portfolio History for",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The lenght of history to fetch. Available values are 'week', 'month', and 'year'. Default is 'week'",
                        "name": "histLength",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StockPortfolioHistoryResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/stocks": {
            "get": {
                "description": "Gets a summary of all stock data for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Summary"
                ],
                "summary": "Get Stock Portfolio Summary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserStockPortfolioSummary"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Inserts a new Stock into the Database for a given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stocks"
                ],
                "summary": "Insert Stock",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The stock to insert",
                        "name": "stock",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserStock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        },
        "/users/{userId}/summary": {
            "get": {
                "description": "Gets a summary of all financial data for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Summary"
                ],
                "summary": "Get Finance Summary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Summary"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/jsonutils.JSONResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authentication.TokenPairs": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "jsonutils.JSONResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Bill": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createDt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastUpdateDt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.CreditCard": {
            "type": "object",
            "properties": {
                "apr": {
                    "type": "number"
                },
                "balance": {
                    "type": "number"
                },
                "createDt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastUpdateDt": {
                    "type": "string"
                },
                "limit": {
                    "type": "number"
                },
                "minPayment": {
                    "type": "number"
                },
                "minPaymentPercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "payment": {
                    "type": "number"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.CreditSummary": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "number"
                },
                "total": {
                    "type": "number"
                },
                "utilization": {
                    "type": "number"
                }
            }
        },
        "models.EnableModuleRequest": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "models.ExpenseSummary": {
            "type": "object",
            "properties": {
                "bills": {
                    "type": "number"
                },
                "creditCardBalance": {
                    "type": "number"
                },
                "creditCards": {
                    "type": "number"
                },
                "expenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SummaryItem"
                    }
                },
                "loanBalance": {
                    "type": "number"
                },
                "loanCost": {
                    "type": "number"
                },
                "overallBalance": {
                    "type": "number"
                },
                "taxes": {
                    "type": "number"
                },
                "totalBalance": {
                    "type": "number"
                },
                "totalCost": {
                    "type": "number"
                }
            }
        },
        "models.HomeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.Income": {
            "type": "object",
            "properties": {
                "createDt": {
                    "type": "string"
                },
                "frequency": {
                    "type": "string"
                },
                "grossPay": {
                    "type": "number"
                },
                "hours": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "lastUpdateDt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "netPay": {
                    "type": "number"
                },
                "nextDt": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "startDt": {
                    "type": "string"
                },
                "taxPercentage": {
                    "type": "number"
                },
                "taxes": {
                    "type": "number"
                },
                "type": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.IncomeSummary": {
            "type": "object",
            "properties": {
                "incomes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SummaryItem"
                    }
                },
                "totalIncome": {
                    "type": "number"
                }
            }
        },
        "models.Loan": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "interest": {
                    "type": "number"
                },
                "interestRate": {
                    "type": "number"
                },
                "loanTerm": {
                    "type": "integer"
                },
                "monthlyPayment": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "paymentSchedule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PaymentScheduleItem"
                    }
                },
                "total": {
                    "type": "number"
                },
                "totalCost": {
                    "type": "number"
                },
                "totalPayment": {
                    "type": "number"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.LoansSummary": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "monthlyCost": {
                    "type": "number"
                },
                "totalBalance": {
                    "type": "number"
                }
            }
        },
        "models.ModuleEnabledResponse": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "models.PaymentScheduleComparisonItem": {
            "type": "object",
            "properties": {
                "interest": {
                    "type": "number"
                },
                "interestDelta": {
                    "type": "number"
                },
                "interestNew": {
                    "type": "number"
                },
                "interestToDate": {
                    "type": "number"
                },
                "interestToDateDelta": {
                    "type": "number"
                },
                "interestToDateNew": {
                    "type": "number"
                },
                "month": {
                    "type": "integer"
                },
                "principal": {
                    "type": "number"
                },
                "principalDelta": {
                    "type": "number"
                },
                "principalNew": {
                    "type": "number"
                },
                "principalToDate": {
                    "type": "number"
                },
                "principalToDateDelta": {
                    "type": "number"
                },
                "principalToDateNew": {
                    "type": "number"
                },
                "remainingBalance": {
                    "type": "number"
                },
                "remainingBalanceDelta": {
                    "type": "number"
                },
                "remainingBalanceNew": {
                    "type": "number"
                }
            }
        },
        "models.PaymentScheduleItem": {
            "type": "object",
            "properties": {
                "interest": {
                    "type": "number"
                },
                "interestToDate": {
                    "type": "number"
                },
                "month": {
                    "type": "integer"
                },
                "principal": {
                    "type": "number"
                },
                "principalToDate": {
                    "type": "number"
                },
                "remainingBalance": {
                    "type": "number"
                }
            }
        },
        "models.PortfolioBalanceHistory": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "models.PortfolioPosition": {
            "type": "object",
            "properties": {
                "asOf": {
                    "type": "string"
                },
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "quantity": {
                    "type": "number"
                },
                "ticker": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "models.PositionHistory": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "endDt": {
                    "type": "string"
                },
                "startDt": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Stock"
                    }
                }
            }
        },
        "models.Role": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Stock": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "createDt": {
                    "type": "string"
                },
                "currentHigh": {
                    "type": "number"
                },
                "currentLow": {
                    "type": "number"
                },
                "currentPrice": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastUpdateDt": {
                    "type": "string"
                },
                "open": {
                    "type": "number"
                },
                "ticker": {
                    "type": "string"
                }
            }
        },
        "models.StockPortfolioHistoryResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PortfolioBalanceHistory"
                    }
                }
            }
        },
        "models.Summary": {
            "type": "object",
            "properties": {
                "creditSummary": {
                    "$ref": "#/definitions/models.CreditSummary"
                },
                "expenseSummary": {
                    "$ref": "#/definitions/models.ExpenseSummary"
                },
                "incomeSummary": {
                    "$ref": "#/definitions/models.IncomeSummary"
                },
                "netFunds": {
                    "type": "number"
                }
            }
        },
        "models.SummaryItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "balance": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRole": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "roleId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.UserStock": {
            "type": "object",
            "properties": {
                "createDt": {
                    "type": "string"
                },
                "effectiveDt": {
                    "type": "string"
                },
                "expirationDt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastUpdateDt": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number"
                },
                "ticker": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.UserStockPortfolioSummary": {
            "type": "object",
            "properties": {
                "asOf": {
                    "type": "string"
                },
                "currentClose": {
                    "type": "number"
                },
                "currentHigh": {
                    "type": "number"
                },
                "currentLow": {
                    "type": "number"
                },
                "currentOpen": {
                    "type": "number"
                },
                "currentValue": {
                    "type": "number"
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PortfolioPosition"
                    }
                }
            }
        }
    }
}